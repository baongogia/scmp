"use client";
import React, { useState, useEffect } from "react";
import { useScrollAnimation } from "@/hooks/useScrollAnimation";

interface Testimonial {
  id: string;
  name: string;
  age: string;
  course: string;
  rating: number;
  content: string;
  achievement: string;
  avatar: string;
}

const TestimonialsSection: React.FC = () => {
  const { elementRef: titleRef, fadeInUp } = useScrollAnimation();
  const { elementRef: carouselRef, scaleIn } = useScrollAnimation();
  const [currentIndex, setCurrentIndex] = useState(0);

  fadeInUp(0);
  scaleIn(0.3);

  const testimonials: Testimonial[] = [
    {
      id: "1",
      name: "Nguy·ªÖn Minh Anh",
      age: "25 tu·ªïi",
      course: "Kh√≥a N√¢ng Cao",
      rating: 5,
      content:
        "T√¥i ƒë√£ h·ªçc b∆°i ·ªü nhi·ªÅu n∆°i nh∆∞ng ch∆∞a n∆°i n√†o chuy√™n nghi·ªáp nh∆∞ ·ªü ƒë√¢y. C√°c hu·∫•n luy·ªán vi√™n r·∫•t t·∫≠n t√¢m v√† ph∆∞∆°ng ph√°p gi·∫£ng d·∫°y r·∫•t khoa h·ªçc. Ch·ªâ sau 3 th√°ng, t√¥i ƒë√£ c√≥ th·ªÉ b∆°i ƒë∆∞·ª£c 4 ki·ªÉu c∆° b·∫£n m·ªôt c√°ch th√†nh th·∫°o.",
      achievement: "Ho√†n th√†nh 4 ki·ªÉu b∆°i trong 3 th√°ng",
      avatar: "/api/placeholder/80/80",
    },
    {
      id: "2",
      name: "Tr·∫ßn VƒÉn H√πng",
      age: "35 tu·ªïi",
      course: "Kh√≥a C∆° B·∫£n",
      rating: 5,
      content:
        "L√† ng∆∞·ªùi l·ªõn tu·ªïi m·ªõi h·ªçc b∆°i, t√¥i r·∫•t lo l·∫Øng. Nh∆∞ng c√°c th·∫ßy c√¥ ·ªü ƒë√¢y ƒë√£ gi√∫p t√¥i v∆∞·ª£t qua n·ªói s·ª£ n∆∞·ªõc v√† h·ªçc ƒë∆∞·ª£c b∆°i m·ªôt c√°ch t·ª± tin. M√¥i tr∆∞·ªùng h·ªçc t·∫≠p r·∫•t an to√†n v√† th√¢n thi·ªán.",
      achievement: "V∆∞·ª£t qua n·ªói s·ª£ n∆∞·ªõc sau 1 th√°ng",
      avatar: "/api/placeholder/80/80",
    },
    {
      id: "3",
      name: "L√™ Th·ªã Mai",
      age: "8 tu·ªïi",
      course: "Kh√≥a Tr·∫ª Em",
      rating: 5,
      content:
        "Con r·∫•t th√≠ch h·ªçc b∆°i ·ªü ƒë√¢y! C√°c c√¥ gi√°o r·∫•t vui t√≠nh v√† d·∫°y qua nhi·ªÅu tr√≤ ch∆°i th√∫ v·ªã. B√¢y gi·ªù con ƒë√£ b∆°i ƒë∆∞·ª£c r·∫•t gi·ªèi v√† kh√¥ng s·ª£ n∆∞·ªõc n·ªØa. Con mu·ªën ti·∫øp t·ª•c h·ªçc ƒë·ªÉ tr·ªü th√†nh v·∫≠n ƒë·ªông vi√™n b∆°i l·ªôi.",
      achievement: "T·ª´ s·ª£ n∆∞·ªõc ƒë·∫øn y√™u th√≠ch b∆°i l·ªôi",
      avatar: "/api/placeholder/80/80",
    },
    {
      id: "4",
      name: "Ph·∫°m ƒê·ª©c Nam",
      age: "28 tu·ªïi",
      course: "Kh√≥a Chuy√™n Nghi·ªáp",
      rating: 5,
      content:
        "T√¥i ƒë√£ c√≥ n·ªÅn t·∫£ng b∆°i t·ª´ tr∆∞·ªõc nh∆∞ng mu·ªën n√¢ng cao k·ªπ thu·∫≠t ƒë·ªÉ tham gia thi ƒë·∫•u. Ch∆∞∆°ng tr√¨nh hu·∫•n luy·ªán ·ªü ƒë√¢y r·∫•t chuy√™n s√¢u, gi√∫p t√¥i c·∫£i thi·ªán ƒë√°ng k·ªÉ th√†nh t√≠ch v√† ƒë·∫°t ƒë∆∞·ª£c m·ª•c ti√™u thi ƒë·∫•u.",
      achievement: "C·∫£i thi·ªán th√†nh t√≠ch 30% sau 6 th√°ng",
      avatar: "/api/placeholder/80/80",
    },
    {
      id: "5",
      name: "Ho√†ng Th·ªã Lan",
      age: "42 tu·ªïi",
      course: "Kh√≥a C∆° B·∫£n",
      rating: 5,
      content:
        "T√¥i h·ªçc b∆°i ƒë·ªÉ c·∫£i thi·ªán s·ª©c kh·ªèe sau khi b√°c sƒ© khuy√™n. C√°c hu·∫•n luy·ªán vi√™n r·∫•t hi·ªÉu bi·∫øt v·ªÅ y h·ªçc th·ªÉ thao v√† ƒë√£ thi·∫øt k·∫ø ch∆∞∆°ng tr√¨nh ph√π h·ª£p v·ªõi t√¨nh tr·∫°ng s·ª©c kh·ªèe c·ªßa t√¥i. Gi·ªù t√¥i c·∫£m th·∫•y kh·ªèe m·∫°nh h∆°n r·∫•t nhi·ªÅu.",
      achievement: "C·∫£i thi·ªán s·ª©c kh·ªèe v√† th·ªÉ l·ª±c",
      avatar: "/api/placeholder/80/80",
    },
  ];

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentIndex((prevIndex) => (prevIndex + 1) % testimonials.length);
    }, 5000);

    return () => clearInterval(interval);
  }, [testimonials.length]);

  const nextTestimonial = () => {
    setCurrentIndex((prevIndex) => (prevIndex + 1) % testimonials.length);
  };

  const prevTestimonial = () => {
    setCurrentIndex(
      (prevIndex) => (prevIndex - 1 + testimonials.length) % testimonials.length
    );
  };

  const goToSlide = (index: number) => {
    setCurrentIndex(index);
  };

  return (
    <section className="py-20 bg-gradient-to-br from-primary-50 via-white to-ocean-50">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        {/* Section Title */}
        <div ref={titleRef} className="text-center mb-16">
          <h2 className="text-4xl md:text-5xl font-bold text-primary-800 mb-6">
            C√¢u Chuy·ªán Th√†nh C√¥ng
          </h2>
          <p className="text-xl text-primary-600 max-w-3xl mx-auto">
            H√†ng ngh√¨n h·ªçc vi√™n ƒë√£ tin t∆∞·ªüng v√† ƒë·∫°t ƒë∆∞·ª£c m·ª•c ti√™u c·ªßa m√¨nh c√πng
            ch√∫ng t√¥i. H√£y l·∫Øng nghe nh·ªØng chia s·∫ª ch√¢n th·∫≠t t·ª´ h·ªç.
          </p>
        </div>

        {/* Testimonial Carousel */}
        <div ref={carouselRef} className="relative max-w-4xl mx-auto">
          <div className="overflow-hidden rounded-2xl">
            <div
              className="flex transition-transform duration-500 ease-in-out"
              style={{ transform: `translateX(-${currentIndex * 100}%)` }}
            >
              {testimonials.map((testimonial) => (
                <div key={testimonial.id} className="w-full flex-shrink-0">
                  <div className="bg-white rounded-2xl shadow-xl p-8 md:p-12 mx-4">
                    {/* Rating Stars */}
                    <div className="flex justify-center mb-6">
                      {[...Array(testimonial.rating)].map((_, i) => (
                        <svg
                          key={i}
                          className="w-6 h-6 text-yellow-400 mx-1"
                          fill="currentColor"
                          viewBox="0 0 20 20"
                        >
                          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                        </svg>
                      ))}
                    </div>

                    {/* Quote */}
                    <div className="text-center mb-8">
                      <svg
                        className="w-12 h-12 text-primary-200 mx-auto mb-4"
                        fill="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path d="M14.017 21v-7.391c0-5.704 3.731-9.57 8.983-10.609l.995 2.151c-2.432.917-3.995 3.638-3.995 5.849h4v10h-9.983zm-14.017 0v-7.391c0-5.704 3.748-9.57 9-10.609l.996 2.151c-2.433.917-3.996 3.638-3.996 5.849h3.983v10h-9.983z" />
                      </svg>
                      <p className="text-lg md:text-xl text-primary-700 leading-relaxed italic">
                        "{testimonial.content}"
                      </p>
                    </div>

                    {/* Achievement Badge */}
                    <div className="text-center mb-6">
                      <span className="inline-block bg-gradient-to-r from-primary-500 to-ocean-500 text-white px-4 py-2 rounded-full text-sm font-medium">
                        üèÜ {testimonial.achievement}
                      </span>
                    </div>

                    {/* User Info */}
                    <div className="flex items-center justify-center space-x-4">
                      <div className="w-16 h-16 bg-gradient-to-br from-primary-200 to-ocean-200 rounded-full flex items-center justify-center">
                        <svg
                          className="w-8 h-8 text-primary-600"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            strokeWidth={2}
                            d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                          />
                        </svg>
                      </div>
                      <div className="text-center">
                        <h4 className="font-bold text-primary-800 text-lg">
                          {testimonial.name}
                        </h4>
                        <p className="text-primary-600">
                          {testimonial.age} ‚Ä¢ {testimonial.course}
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* Navigation Arrows */}
          <button
            onClick={prevTestimonial}
            className="absolute left-0 top-1/2 transform -translate-y-1/2 -translate-x-4 bg-white shadow-lg rounded-full p-3 text-primary-600 hover:text-primary-800 hover:shadow-xl transition-all duration-300"
          >
            <svg
              className="w-6 h-6"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
                d="M15 19l-7-7 7-7"
              />
            </svg>
          </button>

          <button
            onClick={nextTestimonial}
            className="absolute right-0 top-1/2 transform -translate-y-1/2 translate-x-4 bg-white shadow-lg rounded-full p-3 text-primary-600 hover:text-primary-800 hover:shadow-xl transition-all duration-300"
          >
            <svg
              className="w-6 h-6"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
                d="M9 5l7 7-7 7"
              />
            </svg>
          </button>

          {/* Dots Indicator */}
          <div className="flex justify-center mt-8 space-x-2">
            {testimonials.map((_, index) => (
              <button
                key={index}
                onClick={() => goToSlide(index)}
                className={`w-3 h-3 rounded-full transition-all duration-300 ${
                  index === currentIndex
                    ? "bg-primary-600 w-8"
                    : "bg-primary-300 hover:bg-primary-400"
                }`}
              />
            ))}
          </div>
        </div>

        {/* Statistics */}
        <div className="mt-20 grid grid-cols-2 md:grid-cols-4 gap-8">
          <div className="text-center">
            <div className="text-3xl md:text-4xl font-bold text-primary-600 mb-2">
              98%
            </div>
            <div className="text-primary-800 font-medium">H√†i L√≤ng</div>
          </div>
          <div className="text-center">
            <div className="text-3xl md:text-4xl font-bold text-ocean-600 mb-2">
              5000+
            </div>
            <div className="text-primary-800 font-medium">H·ªçc Vi√™n</div>
          </div>
          <div className="text-center">
            <div className="text-3xl md:text-4xl font-bold text-wave-600 mb-2">
              4.9/5
            </div>
            <div className="text-primary-800 font-medium">ƒê√°nh Gi√°</div>
          </div>
          <div className="text-center">
            <div className="text-3xl md:text-4xl font-bold text-primary-600 mb-2">
              100%
            </div>
            <div className="text-primary-800 font-medium">Th√†nh C√¥ng</div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default TestimonialsSection;
